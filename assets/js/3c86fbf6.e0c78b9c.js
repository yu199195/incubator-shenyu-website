"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[3060],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(r),g=o,d=m["".concat(p,".").concat(g)]||m[g]||l[g]||a;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1823:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={title:"Quick start with grpc",description:"Quick start with grpc"},p=void 0,s={unversionedId:"quick-start/quick-start-grpc",id:"version-2.3.0/quick-start/quick-start-grpc",isDocsHomePage:!1,title:"Quick start with grpc",description:"Quick start with grpc",source:"@site/versioned_docs/version-2.3.0/quick-start/quick-start-grpc.md",sourceDirName:"quick-start",slug:"/quick-start/quick-start-grpc",permalink:"/docs/2.3.0/quick-start/quick-start-grpc",editUrl:"https://github.com/apache/incubator-shenyu-website/edit/main/versioned_docs/version-2.3.0/quick-start/quick-start-grpc.md",version:"2.3.0",frontMatter:{title:"Quick start with grpc",description:"Quick start with grpc"},sidebar:"version-2.3.0/tutorialSidebar",previous:{title:"Quick start with Dubbo",permalink:"/docs/2.3.0/quick-start/quick-start-dubbo"},next:{title:"Quick start with http",permalink:"/docs/2.3.0/quick-start/quick-start-http"}},u=[{value:"Environment to prepare",id:"environment-to-prepare",children:[]},{value:"Run the soul-examples-grpc project",id:"run-the-soul-examples-grpc-project",children:[]},{value:"Grpc plugin settings",id:"grpc-plugin-settings",children:[]},{value:"Testing",id:"testing",children:[]}],l={toc:u};function m(e){var t=e.components,c=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},l,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This document introduces how to quickly access the Soul Gateway using Grpc. You can get the code example of this document by clicking ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dromara/soul/tree/2.3.0/soul-examples/soul-examples-grpc"},"here"),"."),(0,a.kt)("h2",{id:"environment-to-prepare"},"Environment to prepare"),(0,a.kt)("p",null,"Please refer to the ",(0,a.kt)("a",{parentName:"p",href:"../users-guide/soul-set-up"},"setup")," and launch ",(0,a.kt)("inlineCode",{parentName:"p"},"soul-admin")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"soul-bootstrap"),"."),(0,a.kt)("p",null,"Note: ",(0,a.kt)("inlineCode",{parentName:"p"},"soul-bootstrap")," need to import grpc dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.dromara</groupId>\n    <artifactId>soul-spring-boot-starter-plugin-grpc</artifactId>\n    <version>${project.version}</version>\n</dependency>\n")),(0,a.kt)("h2",{id:"run-the-soul-examples-grpc-project"},"Run the soul-examples-grpc project"),(0,a.kt)("p",null,"Download ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dromara/soul/tree/2.3.0/soul-examples/soul-examples-grpc"},"soul-examples-grpc")),(0,a.kt)("p",null,"Run the following command under ",(0,a.kt)("inlineCode",{parentName:"p"},"soul-examples-grpc")," to generate Java code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mvn protobuf:compile \nmvn protobuf:compile-custom \n")),(0,a.kt)("p",null,"Execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"org.dromara.soul.examples.grpc.SoulTestGrpcApplication")," main method to start project."),(0,a.kt)("p",null,"The following log appears when the startup is successful:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'2021-02-10 01:57:02.154  INFO 76 --- [           main] o.d.s.e.grpc.SoulTestGrpcApplication     : Started SoulTestGrpcApplication in 2.088 seconds (JVM running for 3.232)\n2021-02-10 01:57:02.380  INFO 76 --- [pool-1-thread-1] o.d.s.client.common.utils.RegisterUtils  : grpc client register success: {"appName":"127.0.0.1:8080","contextPath":"/grpc","path":"/grpc/echo","pathDesc":"","rpcType":"grpc","serviceName":"echo.EchoService","methodName":"echo","ruleName":"/grpc/echo","parameterTypes":"echo.EchoRequest,io.grpc.stub.StreamObserver","rpcExt":"{\\"timeout\\":-1}","enabled":true} \n')),(0,a.kt)("h2",{id:"grpc-plugin-settings"},"Grpc plugin settings"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"enabled the ",(0,a.kt)("inlineCode",{parentName:"li"},"grpc")," plugin in the ",(0,a.kt)("inlineCode",{parentName:"li"},"soul-admin")," plugin management.")),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"soul-examples-grpc")," project will automatically register interface methods annotated with ",(0,a.kt)("inlineCode",{parentName:"p"},"@SoulGrpcClient")," in the soul gateway after successful startup."),(0,a.kt)("p",null,"Open Plugin Management -> grpc to see the list of plugin rule configurations"),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(77964).Z})),(0,a.kt)("p",null,"Use PostMan to simulate HTTP to request your Grpc service"),(0,a.kt)("p",null,(0,a.kt)("img",{src:r(23698).Z})))}m.isMDXComponent=!0},23698:function(e,t,r){t.Z=r.p+"assets/images/postman-test-b5b6c0e96b73b282edc4afb328b01b10.png"},77964:function(e,t,r){t.Z=r.p+"assets/images/rule-list-48c36ffede28b4e62bc36aa59baf44a6.png"}}]);