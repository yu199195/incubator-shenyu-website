"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[1593],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},46161:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var a=r(87462),n=r(63366),o=(r(67294),r(3905)),i=["components"],s={sidebar_position:5,title:"Sofa RPC Proxy",keywords:["sofa"],description:"sofa access soul gateway"},p=void 0,l={unversionedId:"users-guide/sofa-rpc-proxy",id:"version-2.3.0/users-guide/sofa-rpc-proxy",isDocsHomePage:!1,title:"Sofa RPC Proxy",description:"sofa access soul gateway",source:"@site/versioned_docs/version-2.3.0/users-guide/sofa-rpc-proxy.md",sourceDirName:"users-guide",slug:"/users-guide/sofa-rpc-proxy",permalink:"/docs/2.3.0/users-guide/sofa-rpc-proxy",editUrl:"https://github.com/apache/incubator-shenyu-website/edit/main/versioned_docs/version-2.3.0/users-guide/sofa-rpc-proxy.md",version:"2.3.0",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Sofa RPC Proxy",keywords:["sofa"],description:"sofa access soul gateway"},sidebar:"version-2.3.0/tutorialSidebar",previous:{title:"SpringCloud Proxy",permalink:"/docs/2.3.0/users-guide/spring-cloud-proxy"},next:{title:"Use Different Data-Sync Strategy",permalink:"/docs/2.3.0/users-guide/use-data-sync"}},u=[{value:"Description",id:"description",children:[]},{value:"Introduce the plug-in that the gateway supports for sofa",id:"introduce-the-plug-in-that-the-gateway-supports-for-sofa",children:[]},{value:"Plugin Settings",id:"plugin-settings",children:[]},{value:"Interface registered to the gateway",id:"interface-registered-to-the-gateway",children:[]},{value:"sofa user request and parameter description",id:"sofa-user-request-and-parameter-description",children:[]}],c={toc:u};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This article is about sofa users using sofa plug-in support,and the tutorial of connecting your own sofa service to the soul gateway."),(0,o.kt)("li",{parentName:"ul"},"Before connecting, please start ",(0,o.kt)("inlineCode",{parentName:"li"},"soul-admin")," correctly and ",(0,o.kt)("a",{parentName:"li",href:"./soul-set-up"},"Setup Environment")," Ok\u3002")),(0,o.kt)("h2",{id:"introduce-the-plug-in-that-the-gateway-supports-for-sofa"},"Introduce the plug-in that the gateway supports for sofa"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Add the following dependencies in the gateway's ",(0,o.kt)("inlineCode",{parentName:"p"},"pom.xml")," file\uff1a")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Replace the sofa version with yours, and replace the jar package in the registry with yours, The following is a reference\u3002"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n   <groupId>com.alipay.sofa</groupId>\n   <artifactId>sofa-rpc-all</artifactId>\n   <version>5.7.6</version>\n</dependency>\n<dependency>\n   <groupId>org.apache.curator</groupId>\n   <artifactId>curator-client</artifactId>\n   <version>4.0.1</version>\n</dependency>\n<dependency>\n   <groupId>org.apache.curator</groupId>\n   <artifactId>curator-framework</artifactId>\n   <version>4.0.1</version>\n</dependency>\n<dependency>\n   <groupId>org.apache.curator</groupId>\n   <artifactId>curator-recipes</artifactId>\n   <version>4.0.1</version>\n</dependency>\n<dependency>\n   <groupId>org.dromara</groupId>\n   <artifactId>soul-spring-boot-starter-plugin-sofa</artifactId>\n   <version>${last.version}</version>\n</dependency>\n")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n* Restart the gateway service.\n\n## sofa service access gateway, you can refer to\uff1a[soul-examples-sofa](https://github.com/dromara/soul/tree/2.3.0/soul-examples/soul-examples-sofa)\n\n* Springboot\n\n  * Introduce the following dependencies :\n\n ```xml\n        <dependency>\n            <groupId>org.dromara</groupId>\n            <artifactId>soul-spring-boot-starter-client-sofa</artifactId>\n            <version>${soul.version}</version>\n        </dependency>\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"backend server register center config, please look:",(0,o.kt)("a",{parentName:"p",href:"../register-center/register-center-access"},"register center access"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Spring"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Introduce the following dependencies:")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"       <dependency>\n           <groupId>org.dromara</groupId>\n           <artifactId>soul-client-sofa</artifactId>\n           <version>${project.version}</version>\n       </dependency>\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Add the following in the xml file of your bean definition:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'      <bean id ="sofaServiceBeanPostProcessor" class ="org.dromara.soul.client.sofa.SofaServiceBeanPostProcessor">\n           <constructor-arg  ref="soulRegisterCenterConfig"/>\n      </bean>\n\n   <bean id="soulRegisterCenterConfig" class="org.dromara.soul.register.common.config.SoulRegisterCenterConfig">\n     <property name="registerType" value="http"/>\n     <property name="serverList" value="http://localhost:9095"/>\n     <property name="props">\n          <map>\n               <entry key="contextPath" value="/your contextPath"/>\n               <entry key="appName" value="your name"/>\n               <entry key="isFull" value="false"/>\n          </map>\n     </property>\n  </bean>\n')))),(0,o.kt)("h2",{id:"plugin-settings"},"Plugin Settings"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"First in the ",(0,o.kt)("inlineCode",{parentName:"p"},"soul-admin")," plugin management, set the ",(0,o.kt)("inlineCode",{parentName:"p"},"sofa")," plugin to open.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Secondly, configure your registered address in the ",(0,o.kt)("inlineCode",{parentName:"p"},"sofa")," plugin, or the address of other registry."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'{"protocol":"zookeeper","register":"127.0.0.1:2181"}\n')),(0,o.kt)("h2",{id:"interface-registered-to-the-gateway"},"Interface registered to the gateway"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For your sofa service implementation class, add @SoulSofaClient annotation to the method\uff0cIndicates that the interface method is registered to the gateway.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Start your provider and output the log ",(0,o.kt)("inlineCode",{parentName:"p"},"sofa client register success"),". You\u2019re done. Your sofa interface has been published to the soul gateway. If you still don\u2019t understand, you can refer to the ",(0,o.kt)("inlineCode",{parentName:"p"},"soul-test-sofa")," project."))),(0,o.kt)("h2",{id:"sofa-user-request-and-parameter-description"},"sofa user request and parameter description"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"To put it bluntly, it is to request your sofa service through http"),(0,o.kt)("li",{parentName:"ul"},"Soul gateway needs to have a routing prefix, this routing prefix is for you to access the project for configuration ",(0,o.kt)("inlineCode",{parentName:"li"},"contextPath"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# For example, if you have an order service, it has an interface and its registration path /order/test/save\n\n# Now it's to request the gateway via post\uff1ahttp://localhost:9195/order/test/save\n\n# Where localhost:9195 is the IP port of the gateway\uff0cdefault port is 9195 \uff0c/order is the contextPath of your sofa access gateway configuration\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Parameter passing\uff1a"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Access the gateway through http post\uff0cand pass through body and json."),(0,o.kt)("li",{parentName:"ul"},"For more parameter type transfer, please refer to the interface definition in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dromara/soul/tree/2.3.0/soul-examples/soul-examples-sofa"},"soul-examples-sofa")," and the parameter transfer method."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Single java bean parameter type (default)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Customize multi-parameter support:")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the gateway project you built\uff0cadd a new class A\uff0cimplements org.dromara.soul.plugin.api.sofa.SofaParamResolveService\u3002"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"   public interface SofaParamResolveService {\n   \n       /**\n        * Build parameter pair.\n        * this is Resolve http body to get sofa param.\n        *\n        * @param body           the body\n        * @param parameterTypes the parameter types\n        * @return the pair\n        */\n       Pair<String[], Object[]> buildParameter(String body, String parameterTypes);\n   }\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"body")," is the json string passed by body in http. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"parameterTypes"),": list of matched method parameter types, If there are multiple, use ",(0,o.kt)("inlineCode",{parentName:"p"},",")," to separate.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In Pair\uff0cleft is the parameter type\uff0cand right is the parameter value. This is the standard for sofa generalization calls.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Register your class as a String bean and override the default implementation."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic SofaParamResolveService A() {\n   return new A();\n}\n")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"")))}d.isMDXComponent=!0}}]);